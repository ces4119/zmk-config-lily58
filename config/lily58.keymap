/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB1>, <&macro_wait_time 20>, <&m1>;

            label = "m1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Home {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4    &kp N5                                                             &kp N6         &kp N7       &kp N8     &kp N9   &kp N0     &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E   &kp R     &kp T                                                              &kp Y          &kp U        &kp I      &kp O    &kp P      &kp MINUS
&sk LCTRL  &kp A   &kp S   &kp D   &kp F     &kp G                                                              &kp H          &kp J        &kp K      &kp L    &kp SEMI   &kp SQT
&sk LSHFT  &kp Z   &kp X   &kp C   &kp V     &kp B     &mt LEFT_PARENTHESIS LBKT    &mt RIGHT_PARENTHESIS RBKT  &kp N          &kp M        &kp COMMA  &kp DOT  &kp SLASH  &sk RSHFT
                           &to 1   &kp LGUI  &sk LALT  &lt 4 SPACE                  &lt 3 ENTER                 &kp BACKSPACE  &kp RA(TAB)  &to 2
            >;
        };

        Directional {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans           &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans           &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans           &mt SEMICOLON UP  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &mt PERIOD LEFT  &mt SLASH DOWN    &kp RIGHT
                        &to 2   &trans  &trans  &trans    &trans  &trans  &trans  &to 0
            >;
        };

        Debugging {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans      &trans   &trans       &trans          &trans                    &trans  &trans  &trans  &trans      &trans     &trans
&trans  &kp LS(F5)  &kp F5   &kp LA(F1)   &kp LS(LC(F5))  &kp F9                    &trans  &trans  &trans  &trans      &trans     &trans
&trans  &kp F10     &kp F11  &kp LS(F11)  &trans          &trans                    &trans  &trans  &trans  &trans      &kp SEMI   &trans
&trans  &trans      &trans   &trans       &trans          &trans  &trans    &trans  &trans  &trans  &trans  &kp PERIOD  &kp SLASH  &sk RSHIFT
                             &to 0        &trans          &trans  &trans    &trans  &trans  &trans  &to 1
            >;
        };

        Numbers {
            bindings = <
&trans  &trans    &trans    &trans     &trans        &trans                                                 &trans  &trans  &trans  &trans  &trans         &trans
&trans  &kp HOME  &kp UP    &kp END    &kp LA(UP)    &trans                                                 &trans  &kp N7  &kp N8  &kp N9  &kp N0         &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LA(DOWN)  &trans                                                 &trans  &kp N4  &kp N5  &kp N6  &trans         &trans
&trans  &trans    &trans    &trans     &trans        &trans  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &trans  &kp N1  &kp N2  &kp N3  &kp BACKSLASH  &trans
                            &trans     &trans        &trans  &to 0                   &trans                 &trans  &trans  &trans
            >;
        };

        Macros {
            bindings = <
&sys_reset  &m1               &trans        &trans             &trans          &trans                            &trans             &trans            &trans    &trans             &trans         &kp EQUAL
&trans      &kp LC(LG(LEFT))  &kp LG(UP)    &kp LC(LG(RIGHT))  &kp LC(LG(D))   &trans                            &kp C_VOLUME_UP    &kp LS(LC(LEFT))  &kp UP    &kp LS(LC(RIGHT))  &kp PAGE_UP    &trans
&trans      &kp LG(LEFT)      &kp LG(DOWN)  &kp LG(RIGHT)      &kp LC(LG(F4))  &trans                            &kp C_VOLUME_DOWN  &kp LEFT          &kp DOWN  &kp RIGHT          &kp PAGE_DOWN  &trans
&trans      &kp LA(LC(HOME))  &trans        &kp LA(LC(END))    &trans          &trans  &bt BT_PRV    &bt BT_NXT  &kp LS(LC(M))      &kp LC(LEFT)      &trans    &kp LC(RIGHT)      &kp BACKSLASH  &trans
                                            &trans             &trans          &trans  &trans        &to 0       &kp DEL            &trans            &trans
            >;
        };
    };
};
