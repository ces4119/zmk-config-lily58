/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB1>, <&macro_wait_time 20>, <&m1>;

            label = "m1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Home {
            bindings = <
&kp ESC    &mt F1 N1  &mt F2 N2  &mt F3 N3  &mt F4 N4  &mt F5 N5                                                           &mt F6 N6          &mt F7 N7        &mt F8 N8  &mt F9 N9  &mt F10 N0           &mt EQUAL GRAVE
&kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T                                                               &kp Y              &kp U            &kp I      &kp O      &kp P                &kp MINUS
&sk LCTRL  &kp A      &kp S      &kp D      &kp F      &kp G                                                               &kp H              &kp J            &kp K      &kp L      &kp SEMI             &kp SQT
&sk LSHFT  &kp Z      &kp X      &kp C      &kp V      &kp B      &mt LEFT_PARENTHESIS LBKT    &mt RIGHT_PARENTHESIS RBKT  &kp N              &kp M            &kp COMMA  &kp DOT    &mt BACKSLASH SLASH  &sk RSHFT
                                 &to 1      &kp LGUI   &sk LALT   &lt 2 SPACE                  &lt 3 ENTER                 &mt DEL BACKSPACE  &kp RC(RA(TAB))  &to 1
            >;
        };

        Directional {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &trans  &trans  &trans  &trans    &trans                                                             &trans         &trans           &trans            &trans    &trans       &mt EQUAL GRAVE
&kp TAB    &kp Q   &kp W   &kp E   &kp R     &kp T                                                              &kp Y          &kp U            &kp I             &kp O     &mt SLASH P  &kp MINUS
&kp LCTRL  &kp A   &kp S   &kp D   &kp F     &kp G                                                              &kp H          &kp J            &kp K             &kp L     &kp UP       &mt SEMI SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V     &kp B     &mt LEFT_PARENTHESIS LBKT    &mt RIGHT_PARENTHESIS RBKT  &kp N          &kp M            &mt PERIOD COMMA  &kp LEFT  &kp DOWN     &kp RIGHT
                           &to 0   &kp LGUI  &kp LALT  &kp SPACE                    &kp ENTER                   &kp BACKSPACE  &kp RC(RA(TAB))  &to 0
            >;
        };

        DB_N_Nums {
            bindings = <
&kp ESC     &mt F2 F1    &mt F4 F3  &mt F6 F5   &mt F8 F7          &sys_reset                                     &bt BT_CLR  &none            &none   &none   &none                &kp EQUAL
&kp TAB     &kp LS(F5)   &kp F5     &kp LA(F1)  &kp LC(LS(F5))     &m1                                            &none       &kp N7           &kp N8  &kp N9  &none                &kp MINUS
&sk LCTRL   &kp LS(F11)  &kp F11    &kp F10     &mt LG(LC(D)) F12  &mt LG(LC(F4)) F9                              &none       &kp N4           &kp N5  &kp N6  &kp SEMI             &kp SQT
&sk LSHIFT  &kp F6       &kp F7     &kp F8      &kp LG(LC(LEFT))   &kp LG(LC(RIGHT))  &bt BT_PRV    &bt BT_NXT    &none       &kp N1           &kp N2  &kp N3  &mt BACKSLASH SLASH  &sk RSHIFT
                                    &to 0       &kp LWIN           &sk RALT           &none         &mt ENTER N0  &kp DEL     &kp RC(RA(TAB))  &to 1
            >;
        };

        Layers {
            bindings = <
&kp ESC     &mt F2 F1  &mt F4 F3  &mt F6 F5  &mt F8 F7         &none                                        &mt F10 F9         &mt F12 F11                &mt F14 F13  &mt F16 F15                &mt F18 F17    &kp EQUAL
&none       &kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)         &kp LC(T)                                    &kp C_VOLUME_UP    &kp RC(LEFT)               &kp UP       &kp RC(RIGHT)              &kp PAGE_UP    &kp RA(RS(UP))
&none       &kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LG(LC(D))     &kp LG(LC(F4))                               &kp C_VOLUME_DOWN  &mt HOME LEFT              &kp DOWN     &mt END RIGHT              &kp PAGE_DOWN  &kp RA(RS(DOWN))
&sk LSHIFT  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &bt BT_PRV    &bt BT_NXT  &kp RS(RC(M))      &mt RS(HOME) RS(RC(LEFT))  &none        &mt RS(END) RS(RC(RIGHT))  &trans         &sk CAPS
                                  &m1        &kp LGUI          &sk LALT           &none         &none       &kp DEL            &kp RG(TAB)                &none
            >;
        };
    };
};
